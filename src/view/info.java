/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.swing.JOptionPane;
import DAO.CoursesDAO;
import DAO.LectureDAO;
import DAO.StudentDAO;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.JOptionPane;
import model.Course;
import model.Lecturer;
import model.Student;

/**
 *
 * @author omega
 */
public class info extends javax.swing.JFrame {

    /**
     * Creates new form info
     */
    public info() {
        initComponents();
        //this method will be called when the user inserts a new lecturer
        addLecturercombo();
        //this method will be called when the user wants to select students to join a certain class
        //this is the name of the method
        addStudentList();
    }
    
    //inserting a new lecturer so that they will be visible in the combo box
public void addLecturercombo(){
        lecturercombo.removeAllItems();
        LectureDAO dao= new LectureDAO();
            ResultSet lecturerList=dao.getAllLecturer();
            
    try {
             while(lecturerList.next()){
              //we used index of the column  
                lecturercombo.addItem(lecturerList.getString(1)+ "-"+ lecturerList.getString(2));
            }     } catch (Exception ex) {
            ex.printStackTrace();
        }
 
 
}
/////////////////////////////////
// method for inserting students in the box

public void addStudentList(){
    //the method on this line below will be used to remove everything from the student list
    //and put them back in again once you add a new student.
    //studentscombo.removeAll();  we removed this because we were not able to select more than on student with this method..
    DefaultListModel model= new DefaultListModel();
    StudentDAO dao= new StudentDAO();
    ResultSet studentListInfo= dao.getAllStudents();
    try{
        while(studentListInfo.next()){
           model.addElement(studentListInfo.getString(1)+"-"+studentListInfo.getString(2));
    }
       } catch(Exception ex){
        ex.printStackTrace();
    }
    
    studentscombo.setModel(model);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        studentidtxt = new javax.swing.JTextField();
        studentnamestxt = new javax.swing.JTextField();
        savestudent = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lectureridtxt = new javax.swing.JTextField();
        lecturernamestxt = new javax.swing.JTextField();
        savelecturerbtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        courseidtxt = new javax.swing.JTextField();
        coursenametxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lecturercombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentscombo = new javax.swing.JList<>();
        Savecoursebtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Student ID");

        jLabel2.setText("Student Names");

        studentidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentidtxtActionPerformed(evt);
            }
        });

        savestudent.setText("Save");
        savestudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savestudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(studentnamestxt, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(studentidtxt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(317, Short.MAX_VALUE)
                .addComponent(savestudent)
                .addGap(173, 173, 173))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(studentidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(studentnamestxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(savestudent)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Student", jPanel1);

        jLabel3.setText("Lecturer ID");

        jLabel4.setText("Lecturer Names");

        savelecturerbtn.setText("Save");
        savelecturerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savelecturerbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(84, 84, 84)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lectureridtxt)
                            .addComponent(lecturernamestxt, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(savelecturerbtn)))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lectureridtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(lecturernamestxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(savelecturerbtn)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lecturer", jPanel2);

        jLabel5.setText("Course ID");

        jLabel6.setText("Course Name");

        jLabel7.setText("Lecturer");

        jLabel8.setText("Students");

        jScrollPane1.setViewportView(studentscombo);

        Savecoursebtn.setText("Save");
        Savecoursebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavecoursebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(79, 79, 79)
                        .addComponent(courseidtxt))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lecturercombo, 0, 396, Short.MAX_VALUE)
                            .addComponent(coursenametxt)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(Savecoursebtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(courseidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(coursenametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lecturercombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel8)
                        .addContainerGap(118, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(29, 29, 29)
                        .addComponent(Savecoursebtn)
                        .addGap(28, 28, 28))))
        );

        jTabbedPane1.addTab("Courses", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void savestudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savestudentActionPerformed
          // TODO add your handling code here:
        
          // the codes below are used to save a new student in the database
          
        if(studentidtxt.getText().isEmpty() || studentnamestxt.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "Please provide all information"); 
        } else {
            if(studentidtxt.getText().length()==5)
              {
                  Student stud= new Student();
                  
                 ///to change the data type to compatible data type(type casting)
                 
                 int id= Integer.parseInt(studentidtxt.getText());
                  stud.setStudent_id(id);
                  stud.setStudent_names(studentnamestxt.getText());
                  
                  StudentDAO dao= new StudentDAO();
                  String result=dao.saveStudent(stud);
                  
              JOptionPane.showMessageDialog(null,result);
              
             //names of methods usd to add students and lecturers on the list and combo boxes
             
              addLecturercombo();
              addStudentList();
              }  
            else{
           JOptionPane.showMessageDialog(null, "The id should be 5 characters");
            }
        }  
    }//GEN-LAST:event_savestudentActionPerformed

    private void savelecturerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savelecturerbtnActionPerformed
         // TODO add your handling code here:ActionEvent
        
          if(lectureridtxt.getText().isEmpty() || lecturernamestxt.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "Please provide all information"); 
        } else {
            if(lectureridtxt.getText().length()==5)
              {
                 Lecturer lect= new Lecturer();
                  
                 ///to change the data type to compatible data type(type casting)
                 
                 int id= Integer.parseInt(lectureridtxt.getText());
                  lect.setLecture_id(id);
                  lect.setLecturer_names(lecturernamestxt.getText());
                  
                  LectureDAO dao= new LectureDAO();
                  String result=dao.saveLecture(lect);
                  
              JOptionPane.showMessageDialog(null,result);
              
              } 
            else{
           JOptionPane.showMessageDialog(null, "The id should be 5 characters");
            }
        }  
    }//GEN-LAST:event_savelecturerbtnActionPerformed

    private void SavecoursebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavecoursebtnActionPerformed
        // TODO add your handling code here:
        
          if(courseidtxt.getText().isEmpty() || coursenametxt.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "Please provide all information"); 
        } else {
            if(courseidtxt.getText().length()==5)
              {
               // method to sava data
            
                 Course courseInfo= new Course();
                 
                 //this below is used to extract lecturer information from the lecturer combo box
                 //Lecturer lect= new Lecturer(); we didnt use it
                 
// here below we are selecting only the five numbers from the lecturer id but first me must type cast to avoid incompatible data types error
                
                 int lect_id= Integer.parseInt(lecturercombo.getSelectedItem().toString().substring(0, 5) );
                 //lecture_id is the name of the column in course table
                 //lect.setLecture_id(lect_id); we didnt use this too
                 //for the student also
                 //Student stud=new Student(); this too
                 
 //the below code will return the list of the selected students only (their ids) 
                List studentListToSave= studentscombo.getSelectedValuesList();
               
 // under this iterator we will be able to sava data to the database
  
                Iterator iterator= studentListToSave.iterator();
                while (iterator.hasNext()){
                
                 courseInfo.setCourse_id(courseidtxt.getText());
                 courseInfo.setCourse_name(courseidtxt.getText());
                 courseInfo.setLecturer_id_fk(lect_id);
                 //type casting id
                 
                 int stud_id= Integer.parseInt(iterator.next().toString().substring(0, 5));
                 courseInfo.setStudent_id_fk(stud_id);
                 
                 CoursesDAO dao=new CoursesDAO();
                 dao.addCourse(courseInfo);
                }
                 
              JOptionPane.showMessageDialog(null, "Student saved");
              } 
            else{
           JOptionPane.showMessageDialog(null, "The id should be 5 characters");
            }
        }  
        
        
    }//GEN-LAST:event_SavecoursebtnActionPerformed

    private void studentidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentidtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentidtxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Savecoursebtn;
    private javax.swing.JTextField courseidtxt;
    private javax.swing.JTextField coursenametxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> lecturercombo;
    private javax.swing.JTextField lectureridtxt;
    private javax.swing.JTextField lecturernamestxt;
    private javax.swing.JButton savelecturerbtn;
    private javax.swing.JButton savestudent;
    private javax.swing.JTextField studentidtxt;
    private javax.swing.JTextField studentnamestxt;
    private javax.swing.JList<String> studentscombo;
    // End of variables declaration//GEN-END:variables
}
